version: '3.5'
services:

  nginx:
    restart: unless-stopped
    image:
      nginx:latest
    ports:
      - "80:80"
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - wordpress:/var/www/html
    networks:
      docker-network:
        ipv4_address: 172.16.238.2

  redis:
    restart: unless-stopped
    image:
      redis:latest
    container_name: redis
    networks:
      docker-network:
        ipv4_address: 172.16.238.3

  db:
    restart: unless-stopped
    image:
      mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    container_name: db
    #env_file: .env
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
      docker-network:
        ipv4_address: 172.16.238.4

  wordpress:
    restart: unless-stopped
    depends_on:
      - db
    #image: wordpress:5.1.1-fpm-alpine
    build: .
    image: custom-wordpress
    #command: sh -c "chown www-data:www-data /var/www/html/wp-config.php"
    #image: custom-wordpress:latest
    container_name: wordpress
    #env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
      - WP_PLUGINS="redis-cache"
    volumes:
      - wordpress:/var/www/html
      #- ./plugins:/var/www/html/wp-content/plugins
      #- ./wp-config.php:/
    networks:
      docker-network:
        ipv4_address: 172.16.238.5


networks:
  docker-network:
   #external: true
   ipam:
     config:
       - subnet: 172.16.238.0/24

volumes:
  wordpress:
  mysql_data:
